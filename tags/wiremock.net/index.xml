<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>WireMock.Net on Daniel Genezini | It works on my machine</title><link>https://blog.genezini.com/tags/wiremock.net/</link><description>Recent content in WireMock.Net on Daniel Genezini | It works on my machine</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>2022 Daniel Genezini All rights reserved</copyright><lastBuildDate>Tue, 11 Apr 2023 08:00:00 -0300</lastBuildDate><atom:link href="https://blog.genezini.com/tags/wiremock.net/index.xml" rel="self" type="application/rss+xml"/><item><title>Why my WireMock mocks aren't working?</title><link>https://blog.genezini.com/p/why-my-wiremock-mocks-arent-working/</link><pubDate>Tue, 11 Apr 2023 08:00:00 -0300</pubDate><guid>https://blog.genezini.com/p/why-my-wiremock-mocks-arent-working/</guid><description>&lt;img src="https://blog.genezini.com/p/why-my-wiremock-mocks-arent-working/cover.jpg" alt="Featured image of post Why my WireMock mocks aren't working?" /> WireMock.Net is a great tool to remove external dependencies when writing integration tests, but because it is highly configurable, it can be hard to find why its mocks aren&amp;rsquo;t working.
In this post, I&amp;rsquo;ll explain how to troubleshoot problems in its configuration and show some common problems that happen in my day-to-day work.</description><postDescription>
WireMock.Net is a great tool to remove external dependencies when writing integration tests, but because it is highly configurable, it can be hard to find why its mocks aren&amp;rsquo;t working.
In this post, I&amp;rsquo;ll explain how to troubleshoot problems in its configuration and show some common problems that happen in my day-to-day work.</postDescription></item><item><title>Integration tests without API dependencies with ASP.NET Core and WireMock.Net</title><link>https://blog.genezini.com/p/integration-tests-without-api-dependencies-with-asp.net-core-and-wiremock.net/</link><pubDate>Sun, 25 Sep 2022 08:00:00 -0300</pubDate><guid>https://blog.genezini.com/p/integration-tests-without-api-dependencies-with-asp.net-core-and-wiremock.net/</guid><description>&lt;img src="https://blog.genezini.com/p/integration-tests-without-api-dependencies-with-asp.net-core-and-wiremock.net/cover.jpg" alt="Featured image of post Integration tests without API dependencies with ASP.NET Core and WireMock.Net" /> Although there are many definitions about the scope of an integration test, Martin Fowler defines Narrow integration tests, where the integration with other systems are tested using mocks, and Broad integration tests, where they communicate using real APIs.
In this post, I&amp;rsquo;ll explain how to create mocks for HTTP APIs in narrow integration tests using the WireMock.Net library.</description><postDescription>
Although there are many definitions about the scope of an integration test, Martin Fowler defines Narrow integration tests, where the integration with other systems are tested using mocks, and Broad integration tests, where they communicate using real APIs.
In this post, I&amp;rsquo;ll explain how to create mocks for HTTP APIs in narrow integration tests using the WireMock.Net library.</postDescription></item></channel></rss>