<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Git on Daniel Genezini</title><link>https://blog.genezini.com/categories/git/</link><description>Recent content in Git on Daniel Genezini</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>2022 Daniel Genezini All rights reserved</copyright><lastBuildDate>Wed, 04 Jan 2023 06:30:00 -0300</lastBuildDate><atom:link href="https://blog.genezini.com/categories/git/index.xml" rel="self" type="application/rss+xml"/><item><title>Git Aliases: a time-saving secret weapon for improved workflow and productivity</title><link>https://blog.genezini.com/p/git-aliases-a-time-saving-secret-weapon-for-improved-workflow-and-productivity/</link><pubDate>Wed, 04 Jan 2023 06:30:00 -0300</pubDate><guid>https://blog.genezini.com/p/git-aliases-a-time-saving-secret-weapon-for-improved-workflow-and-productivity/</guid><description>&lt;img src="https://blog.genezini.com/p/git-aliases-a-time-saving-secret-weapon-for-improved-workflow-and-productivity/cover.jpg" alt="Featured image of post Git Aliases: a time-saving secret weapon for improved workflow and productivity" /> Git is a powerful tool with lots of commands and customizable options. Fortunately, to make our lives easier, we can create aliases to simplify these commands.
In this post I&amp;rsquo;ll explain how Git aliases work and show the aliases I currently use.</description><postDescription>
Git is a powerful tool with lots of commands and customizable options. Fortunately, to make our lives easier, we can create aliases to simplify these commands.
In this post I&amp;rsquo;ll explain how Git aliases work and show the aliases I currently use.</postDescription></item><item><title>7 tips for improving your productivity with Git</title><link>https://blog.genezini.com/p/7-tips-for-improving-your-productivity-with-git/</link><pubDate>Tue, 27 Dec 2022 06:15:00 -0300</pubDate><guid>https://blog.genezini.com/p/7-tips-for-improving-your-productivity-with-git/</guid><description>&lt;img src="https://blog.genezini.com/p/7-tips-for-improving-your-productivity-with-git/cover.jpg" alt="Featured image of post 7 tips for improving your productivity with Git" /> Git is the most popular source control system with an incredible 93.87% of adoption by developers (according to StackOverflow&amp;rsquo;s 2022 Survey). It&amp;rsquo;s a really powerful system with lots of hidden features not known by most of us developers.
In this post, I&amp;rsquo;ll show some of these features that will make your work easier when using Git.</description><postDescription>
Git is the most popular source control system with an incredible 93.87% of adoption by developers (according to StackOverflow&amp;rsquo;s 2022 Survey). It&amp;rsquo;s a really powerful system with lots of hidden features not known by most of us developers.
In this post, I&amp;rsquo;ll show some of these features that will make your work easier when using Git.</postDescription></item><item><title>Working on multiple Git branches in parallel</title><link>https://blog.genezini.com/p/working-on-multiple-git-branches-in-parallel/</link><pubDate>Fri, 30 Sep 2022 09:35:00 -0300</pubDate><guid>https://blog.genezini.com/p/working-on-multiple-git-branches-in-parallel/</guid><description>&lt;img src="https://blog.genezini.com/p/working-on-multiple-git-branches-in-parallel/cover.png" alt="Featured image of post Working on multiple Git branches in parallel" /> When working on a project, many times we have to switch to a different branch to help a colleague, fix a bug, or to work on another feature (because of a change in priorities or blocks).
In these situations, we have some options:
Clone again to another folder: This was the option that I used up until some time ago, but if you are working on a big code base, it may take some time to download the remote repository and it will use more space in the disk because you will end up with one copy of the repository for each branch;
Stash or commit changes and checkout the other branch: This is ok, but it takes more steps and doesn&amp;rsquo;t allow for multiple branches checked out in parallel;
Add a new working tree: This is what I prefer to do because I can have only one local repository shared between the branches.
In this post, I&amp;rsquo;ll show how to use Git working trees to make those branch switches easier.</description><postDescription>
When working on a project, many times we have to switch to a different branch to help a colleague, fix a bug, or to work on another feature (because of a change in priorities or blocks).
In these situations, we have some options:
Clone again to another folder: This was the option that I used up until some time ago, but if you are working on a big code base, it may take some time to download the remote repository and it will use more space in the disk because you will end up with one copy of the repository for each branch;
Stash or commit changes and checkout the other branch: This is ok, but it takes more steps and doesn&amp;rsquo;t allow for multiple branches checked out in parallel;
Add a new working tree: This is what I prefer to do because I can have only one local repository shared between the branches.
In this post, I&amp;rsquo;ll show how to use Git working trees to make those branch switches easier.</postDescription></item></channel></rss>