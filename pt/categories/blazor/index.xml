<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blazor on Daniel Genezini</title><link>https://blog.genezini.com/pt/categories/blazor/</link><description>Recent content in Blazor on Daniel Genezini</description><generator>Hugo -- gohugo.io</generator><language>pt-br</language><copyright>2022 Daniel Genezini All rights reserved</copyright><lastBuildDate>Thu, 17 Nov 2022 09:50:00 -0300</lastBuildDate><atom:link href="https://blog.genezini.com/pt/categories/blazor/index.xml" rel="self" type="application/rss+xml"/><item><title>Apresentando module federation para Blazor</title><link>https://blog.genezini.com/pt/p/apresentando-module-federation-para-blazor/</link><pubDate>Thu, 17 Nov 2022 09:50:00 -0300</pubDate><guid>https://blog.genezini.com/pt/p/apresentando-module-federation-para-blazor/</guid><description>&lt;img src="https://blog.genezini.com/pt/p/apresentando-module-federation-para-blazor/cover.jpg" alt="Featured image of post Apresentando module federation para Blazor" />Introdução Com o release do .NET 7, a Microsoft incluiu uma funcionalizade para renderizar componentes Blazor em aplicações JavaScript (RegisterCustomElement&amp;lt;T&amp;gt;). Isso ajuda quem quer migrar lentamente de aplicações JavaScript para Blazor, mas infelizmente, não funciona para expor componentes Blazor como microfrontends, pois funciona apenas para aplicações JavaScript hospedadas junto com a aplicação Blazor.
Neste post, vou apresentar um pacote nuget que criei como protótipo para tentar resolver esse problema, expondo componentes Blazor com module federation para o consumo de outras aplicações.</description></item></channel></rss>